import{W as y,ae as B,p as r,s as $,o as m,P as b,Z as i,w as _,Q as e,e as a,aA as D,m as g,aB as w,aC as h,aD as k,aE as W,aF as x,x as R,aG as S,aH as P,aI as F,aJ as H,M as I,aK as q,X as E,Y as N,F as z,a0 as J,a9 as v,c as M,R as Q,U as V}from"./index-D_ytHs-s.js";import{Y as C,Q as Y,n as L,O as G,J as j}from"./trescientos-DGEFwrdW.js";import{P as A}from"./tweakpane-DhSwS92u.js";const O={class:"container"},K={position:[0,0,-1],"cast-shadow":""},U=["side"],X=["rotation"],Z={__name:"glassMaterial",setup(T){const n=B(),p=B(),u=r(),d={clearColor:"#fff2f5",shadows:!0,alpha:!1,shadowMapType:h,outputColorSpace:k,toneMapping:W};return $(n,t=>{p.value.instance.material.dispose(),p.value.instance.material=t.instance}),(t,s)=>(m(),b("div",O,[i(a(w),g(d,{ref_key:"context",ref:u}),{default:_(()=>[s[3]||(s[3]=e("TresPerspectiveCamera",{position:[6,5,7]},null,-1)),i(a(C)),s[4]||(s[4]=e("TresGridHelper",{args:[10,10]},null,-1)),e("TresMesh",K,[s[0]||(s[0]=e("TresPlaneGeometry",{args:[10,10]},null,-1)),e("TresMeshBasicMaterial",{color:"#f9dae0",side:a(D)},null,8,U)]),e("TresMesh",{position:[0,-2,0],rotation:[-Math.PI/2,0,0],"receive-shadow":""},s[1]||(s[1]=[e("TresPlaneGeometry",{args:[20,20,20,20]},null,-1),e("TresMeshToonMaterial",{color:"#82DBC5"},null,-1)]),8,X),e("TresMesh",null,[s[2]||(s[2]=e("TresTorusGeometry",{args:[1,.5,16,32]},null,-1)),i(a(Y),{ref_key:"glassMaterialRef",ref:n},null,512)]),i(a(L),{"cast-shadow":"",ref_key:"boxRef",ref:p,args:[1,1,1],position:[0,3,0]},null,512),s[5]||(s[5]=e("TresAmbientLight",{intensity:1},null,-1)),s[6]||(s[6]=e("TresDirectionalLight",{"cast-shadow":"",intensity:10,position:[2,5,2]},null,-1))]),_:1},16)]))}},ee=y(Z,[["__scopeId","data-v-adb01ce4"]]),se={class:"container"},oe=["rotation"],ae={"cast-shadow":"","receive-shadow":""},te={__name:"Reflector",setup(T){const n=r(),p=r(),u={clearColor:"#fff2f5",shadows:!0,alpha:!1,shadowMapType:h,outputColorSpace:k,toneMapping:W},d=x({metalness:.5,roughness:.2,color:"#f19aae"}),t=x({color:"#e5ffff",textureWidth:"1024",textureHeight:"1024",position:[0,0,-3]}),s=r(),l=()=>{s.value=new A({container:p.value});const c=s.value.addFolder({title:"物体"});c.addBinding(d,"color",{label:"物体颜色"}),c.addBinding(d,"metalness",{label:"金属度",min:0,max:1}),c.addBinding(d,"roughness",{label:"粗糙度",min:0,max:1}),s.value.addFolder({title:"反射"}).addBinding(t,"color",{label:"颜色"})};return R(()=>{l()}),(c,o)=>(m(),b("div",se,[e("div",{ref_key:"paneRef",ref:p,class:"pane"},null,512),i(a(w),g({shadows:""},u,{ref_key:"context",ref:n}),{default:_(()=>[o[4]||(o[4]=e("TresPerspectiveCamera",{position:[6,5,7]},null,-1)),i(a(C)),o[5]||(o[5]=e("TresGridHelper",{args:[10,10]},null,-1)),e("TresMesh",{"receive-shadow":"",position:[0,-4,0],rotation:[-Math.PI/2,0,0]},o[0]||(o[0]=[e("TresPlaneGeometry",{args:[20,20,20,20]},null,-1),e("TresMeshToonMaterial",{color:"#82DBC5"},null,-1)]),8,oe),e("TresMesh",ae,[o[1]||(o[1]=e("TresTorusGeometry",{args:[1,.4,16,100]},null,-1)),e("TresMeshStandardMaterial",g(a(d),{ref:"standardMaterialRef"}),null,16)]),i(a(L),{position:[0,3,1],"cast-shadow":""},{default:_(()=>[e("TresMeshStandardMaterial",S(P(a(d))),null,16)]),_:1}),i(a(G),S(P(a(t))),{default:_(()=>o[2]||(o[2]=[e("TresPlaneGeometry",{args:[10,10,10,10]},null,-1)])),_:1},16),i(a(G),{"cast-shadow":"",color:"#82DBC5",position:[0,3,-1],textureWidth:"1024",textureHeight:"1024"},{default:_(()=>o[3]||(o[3]=[e("TresSphereGeometry",{args:[1,32,32]},null,-1)])),_:1}),o[6]||(o[6]=e("TresAmbientLight",{intensity:1},null,-1)),o[7]||(o[7]=e("TresDirectionalLight",{"cast-shadow":"",intensity:10,position:[2,5,2]},null,-1))]),_:1},16)]))}},ne=y(te,[["__scopeId","data-v-088b351f"]]),le={class:"container"},re={__name:"CustomMaterial",setup(T){const{onLoop:n}=F(),p=r(),u=r(),d={clearColor:"#fff2f5",shadows:!0,alpha:!1,shadowMapType:h,outputColorSpace:k,toneMapping:W},t=x({Time:2,WobbleSpeed:1,WobbleAmplitude:.03,WobbleFrequency:20}),s=x({baseMaterial:H,fragmentShader:`
      varying float vWobble;

      void main() {
        float wobble = vWobble * 0.5 + 0.5;
        csm_FragColor = mix(vec4(0.1, 0.6, 0.7, 1.0), vec4(0.2, 0.8, 0.9, 1.0), wobble);
      }
    `,vertexShader:`
      uniform float u_Time;
      uniform float u_WobbleSpeed;
      uniform float u_WobbleAmplitude;
      uniform float u_WobbleFrequency;

      varying float vWobble;

      void main() {
        float wobble = sin(csm_Position.z * u_WobbleFrequency + u_Time * u_WobbleSpeed);
        csm_Position += normal * wobble * u_WobbleAmplitude;

        vWobble = wobble;
      }
    `,uniforms:{u_Time:{value:2},u_WobbleSpeed:{value:1},u_WobbleAmplitude:{value:.03},u_WobbleFrequency:{value:20}}});$(t,o=>{s.uniforms.u_Time.value=o.Time,s.uniforms.u_WobbleSpeed.value=o.WobbleSpeed,s.uniforms.u_WobbleAmplitude.value=o.WobbleAmplitude,s.uniforms.u_WobbleFrequency.value=o.WobbleFrequency},{deep:!0});const l=r(),c=()=>{l.value=new A({container:u.value,expanded:!0}),l.value.addBinding(t,"Time",{min:0,max:10,step:.01}),l.value.addBinding(t,"WobbleSpeed",{min:0,max:10,step:.01}),l.value.addBinding(t,"WobbleAmplitude",{min:0,max:.1,step:.001}),l.value.addBinding(t,"WobbleFrequency",{min:0,max:100,step:.01})};return R(async()=>{c(),await I(),n(()=>{s.uniforms.u_Time.value+=.01*s.uniforms.u_WobbleSpeed.value})}),(o,f)=>(m(),b("div",le,[e("div",{ref_key:"paneRef",ref:u,class:"pane"},null,512),i(a(w),g({shadows:""},d,{ref_key:"context",ref:p}),{default:_(()=>[f[1]||(f[1]=e("TresPerspectiveCamera",{position:[6,5,7]},null,-1)),i(a(C)),f[2]||(f[2]=e("TresGridHelper",{args:[10,10]},null,-1)),e("TresMesh",null,[f[0]||(f[0]=e("TresSphereGeometry",{args:[1,32,32]},null,-1)),i(a(j),S(P(a(s))),null,16)]),f[3]||(f[3]=e("TresAmbientLight",{intensity:1},null,-1)),f[4]||(f[4]=e("TresDirectionalLight",{"cast-shadow":"",intensity:10,position:[2,5,2]},null,-1))]),_:1},16)]))}},ie=y(re,[["__scopeId","data-v-5a67c281"]]),ue={class:"container"},de={ref:"paneRef",class:"pane"},pe=["position"],me=["map","normalMap"],fe={__name:"Globe",setup(T){const{onLoop:n}=F(),p=r();r([0,0,0]);const u=r(),d=r([2,2,2]),t=r(),s={clearColor:"#f6f0f4",shadows:!0,alpha:!1,shadowMapType:h,outputColorSpace:k,toneMapping:W},l=r({});return n(()=>{u.value&&(u.value.rotation.y+=.005)}),R(async()=>{l.value=await q({map:"/texture/world.jpeg",normalMap:"/texture/world_normal.jpg"})}),(c,o)=>(m(),b("div",ue,[e("div",de,null,512),i(a(w),g({shadows:""},s,{ref_key:"context",ref:p}),{default:_(()=>[i(a(C)),o[1]||(o[1]=e("TresGridHelper",{args:[10,10]},null,-1)),e("TresPerspectiveCamera",{position:d.value,"look-at":[0,0,0],ref_key:"cameraRef",ref:t},null,8,pe),e("TresMesh",{ref_key:"globeRef",ref:u},[o[0]||(o[0]=e("TresSphereGeometry",{args:[1,32,32]},null,-1)),e("TresMeshStandardMaterial",{map:l.value.map,normalMap:l.value.normalMap},null,8,me)],512),o[2]||(o[2]=e("TresAmbientLight",{intensity:1},null,-1)),o[3]||(o[3]=e("TresDirectionalLight",{"cast-shadow":"",intensity:6,position:[5,2,0]},null,-1))]),_:1},16)]))}},ce=y(fe,[["__scopeId","data-v-b6a7f512"]]),be={class:"example-list"},_e=["onClick"],ve=["src"],ge={class:"show-window"},ye={key:0},Te={__name:"index",setup(T){const{selectedExample:n,allExampleList:p}=E(N()),u=r(p.value.three["three-material"]),d=()=>{u.value.map(t=>{t.key===n.value.key&&t.src&&window.open(t.src,"_blank")})};return(t,s)=>(m(),b("div",null,[e("div",be,[(m(!0),b(z,null,J(u.value,l=>(m(),b("div",{class:Q(["example-item",l.key===a(n).key?"selected":""]),key:l.key,onClick:c=>n.value=l},[e("img",{src:l.img},null,8,ve),e("span",null,V(l.name),1)],10,_e))),128)),s[0]||(s[0]=e("p",{class:"example-desc"},"更多案例正在开发中···",-1))]),e("div",ge,[a(n).key?v("",!0):(m(),b("span",ye,"选择一个示例以展示")),a(n).key==="GlassMaterial"?(m(),M(ee,{key:1})):v("",!0),a(n).key==="Reflector"?(m(),M(ne,{key:2})):v("",!0),a(n).key==="CustomMateral"?(m(),M(ie,{key:3})):v("",!0),a(n).key==="Globe"?(m(),M(ce,{key:4})):v("",!0),e("div",{class:"example-code-link",onClick:d},s[1]||(s[1]=[e("i",{class:"iconfont icon-code"},null,-1),e("span",null,"查看源码",-1)]))])]))}},he=y(Te,[["__scopeId","data-v-63871073"]]);export{he as default};
